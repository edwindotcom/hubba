{"version":3,"sources":["components/app/globals.js","components/common/User.jsx","components/common/Repo.jsx","components/common/Org.jsx","components/common/Issues.jsx","components/common/All.jsx","components/common/ContentManager.jsx","components/common/Search.jsx","components/app/App.js","serviceWorker.js","index.js"],"names":["GH_BASE_URL","JUMP_ROOT","concat","SEARCH_TYPE_USER","SEARCH_TYPE_ARRAY","User","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchArg","searchType","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","defineProperty","target","name","value","e","url","window","open","react","onSubmit","TextInput","placeholder","id","tab","onChange","width","Select","key","Button","React","Repo","rootArg","Strong","size","Org","repoArg","qs","Issues","pathArg","preventDefault","indexOf","toaster","danger","All","_this2","es","_ref","map","val","Content","common_User","common_Repo","common_Org","common_Issues","common_All","Search","initialState","selectedIndex","tabs","Pane","height","Tablist","marginBottom","flexBasis","marginRight","index","Tab","onClick","rootToken","onSelect","isSelected","aria-controls","flex","alignItems","display","role","aria-labelledby","aria-hidden","ContentManager","App","react_default","a","createElement","className","Heading","common_Search","Link","href","float","Component","Boolean","location","hostname","match","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2f40bad.chunk.js","sourcesContent":["\n\nexport const GH_BASE_URL = \"https://github.com\";\nexport const SEARCH_BASE_URL = `${GH_BASE_URL}/search?`;\nexport const USER_BASE_URL = `${GH_BASE_URL}/search?type=Users&q=user%3A`;\nexport const REPO_SEARCH_URL = `${GH_BASE_URL}/search?type=Repositories&q=`; // org%3Agithub+user%3Adata\n\n\nexport const TAB_USER = \"User\";\nexport const TAB_REPO = \"Repo\";\nexport const TAB_ORG = \"Org\";\nexport const TAB_ISSUES = \"Issues\";\nexport const TAB_ALL = \"All\";\n\nexport const JUMP_ROOT = \"github.com\";\nexport const JUMP_PAGES = \"github.io\";\n\nexport const SEARCH_TYPE_USER = \"Users\";\nexport const SEARCH_TYPE_CODE = \"Code\";\nexport const SEARCH_TYPE_REPO = \"Repositories\";\nexport const SEARCH_TYPE_COMMITS = \"Commits\";\nexport const SEARCH_TYPE_ISSUES = \"Issues\";\nexport const SEARCH_TYPE_PACKAGES = \"Packages\";\nexport const SEARCH_TYPE_MARKETPLACE = \"Marketplace\";\nexport const SEARCH_TYPE_TOPICS = \"Topics\";\nexport const SEARCH_TYPE_WIKIS = \"Wikis\";\n\nexport const SEARCH_TYPE_ARRAY = [\n         SEARCH_TYPE_USER,\n         SEARCH_TYPE_CODE,\n         SEARCH_TYPE_REPO,\n         SEARCH_TYPE_COMMITS,\n         SEARCH_TYPE_ISSUES,\n         SEARCH_TYPE_PACKAGES,\n         SEARCH_TYPE_MARKETPLACE,\n         SEARCH_TYPE_TOPICS,\n         SEARCH_TYPE_WIKIS\n       ];\n\n\n","import * as React from \"react\";\nimport { Select, TextInput, Button } from \"evergreen-ui\";\nimport { GH_BASE_URL, JUMP_PAGES, JUMP_ROOT } from \"../app/globals\";\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchArg: \"\",\n      searchType: JUMP_ROOT\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    let url\n    if (this.state.searchType == JUMP_ROOT) {\n        url = `${GH_BASE_URL}/${this.state.searchArg}`;\n    } else if (this.state.searchType == JUMP_PAGES) {\n        url = `https://${this.state.searchArg}.github.io`;\n    }\n\n    window.open(url, \"_blank\");\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <TextInput\n            name=\"searchArg\"\n            placeholder=\"Jump to User/Org\"\n            id={this.props.tab}\n            onChange={this.handleChange}\n            width={150}\n          />\n          <Select\n            name=\"searchType\"\n            value={this.state.searchType}\n            onChange={this.handleChange}\n          >\n            <option key={JUMP_ROOT}>{JUMP_ROOT}</option>\n            <option key={JUMP_PAGES}>{JUMP_PAGES}</option>\n          </Select>\n          <Button>GO</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default User;\n","import * as React from \"react\";\nimport { Strong, TextInput, Button } from \"evergreen-ui\";\nimport {\n  GH_BASE_URL\n} from \"../app/globals\";\n\nclass Repo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rootArg: \"\",\n      searchArg: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(e) {\n                    // https://github.com/search?q=user%3Aedwindotcom+pages\n                    let url = `${GH_BASE_URL}/search?q=user%3A${this.state.rootArg}+${this.state.searchArg}`;\n                    window.open(url, \"_blank\");\n                  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <TextInput\n            name=\"rootArg\"\n            placeholder=\"User or Org\"\n            id={this.props.tab}\n            onChange={this.handleChange}\n            width={130}\n          />\n          <Strong size={500}> / </Strong>\n          <TextInput\n            name=\"searchArg\"\n            placeholder=\"Search Param\"\n            id={this.props.tab}\n            onChange={this.handleChange}\n            width={130}\n          />\n          &nbsp;\n          <Button>GO</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Repo;\n","import * as React from \"react\";\nimport { Strong, TextInput, Button } from \"evergreen-ui\";\nimport {\n  GH_BASE_URL\n} from \"../app/globals\";\n\nclass Org extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rootArg: \"\",\n      repoArg: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    let qs = `q=${this.state.repoArg}&type=&language=`;\n    let url = `${GH_BASE_URL}/${this.state.rootArg}?${qs}`;\n    window.open(url, \"_blank\");\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <TextInput\n            name=\"rootArg\"\n            placeholder=\"Search Org Repos\"\n            id={this.props.tab}\n            onChange={this.handleChange}\n            width={130}\n          />\n          <Strong size={500}> / </Strong>\n          <TextInput\n            name=\"repoArg\"\n            placeholder=\"Repo Filter\"\n            id={this.props.tab}\n            onChange={this.handleChange}\n            width={130}\n          />\n          &nbsp;\n          <Button>GO</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Org;\n","import * as React from \"react\";\nimport { toaster, TextInput, Button, Strong } from \"evergreen-ui\";\nimport { GH_BASE_URL } from \"../app/globals\";\n\nclass Issues extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pathArg: \"\",\n      searchArg: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.pathArg.indexOf(\"/\") == -1) {\n      toaster.danger(\"Slash '/' delimeter is required\");\n    }else{\n      let url = `${GH_BASE_URL}/${this.state.pathArg}/issues?q=${this.state.searchArg}`;\n      window.open(url, \"_blank\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <Strong>GitHub user/repo:</Strong> <br />\n          <TextInput\n            name=\"pathArg\"\n            placeholder=\"User/Repo\"\n            id={this.props.tab}\n            onChange={this.handleChange}\n            width={230}\n          />\n          <br />\n          <Strong>Issues Query:</Strong>\n          <br />\n          <TextInput\n            name=\"searchArg\"\n            placeholder=\"Search Param\"\n            id={this.props.tab}\n            onChange={this.handleChange}\n            width={230}\n          />\n          <Button>GO</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Issues;\n","import * as React from \"react\";\nimport Component from \"@reactions/component\";\nimport { TextInput, Select, Button } from \"evergreen-ui\";\nimport { SEARCH_TYPE_ARRAY, GH_BASE_URL, SEARCH_TYPE_USER } from \"../app/globals\";\n\nclass All extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rootArg: \"\",\n      searchType: SEARCH_TYPE_USER\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    let qs = `q=${this.state.rootArg}&type=${this.state.searchType}&language=`;\n    let url = `${GH_BASE_URL}/search?${qs}`;\n    window.open(url, \"_blank\");\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <TextInput\n            name=\"rootArg\"\n            placeholder=\"Search\"\n            id={this.props.tab}\n            onChange={this.handleChange}\n            width={150}\n          />\n          <Component>\n            {({ state, setState }) => (\n              <Select\n                name=\"searchType\"\n                value={this.state.searchType}\n                onChange={this.handleChange}\n              >\n                {SEARCH_TYPE_ARRAY.map(val => (\n                  <option key={val}>{val}</option>\n                ))}\n                }\n              </Select>\n            )}\n          </Component>\n          <Button>GO</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default All;\n","import * as React from \"react\";\nimport User from \"./User\";\nimport Repo from \"./Repo\";\nimport Org from \"./Org\";\nimport Issues from \"./Issues\";\nimport All from \"./All\";\n\nimport { TAB_USER, TAB_REPO, TAB_ORG, TAB_ALL, TAB_ISSUES } from \"../app/globals\";\n\n\nclass Content extends React.Component {\n  render() {\n      if (this.props.tab == TAB_USER) {\n        return <User></User>\n      } else if (this.props.tab == TAB_REPO) {\n        return <Repo></Repo>;\n      } else if (this.props.tab == TAB_ORG) {\n        return <Org></Org>;\n      } else if (this.props.tab == TAB_ISSUES) {\n        return <Issues></Issues>;\n      } else if (this.props.tab == TAB_ALL) {\n        return <All></All>\n      }\n    }\n}\n\nexport default Content;\n","import * as React from \"react\";\nimport Component from \"@reactions/component\";\nimport { Pane, Tab, Tablist} from \"evergreen-ui\";\nimport ContentManager from \"./ContentManager\";\nimport { TAB_ALL, TAB_USER, TAB_ORG, TAB_REPO, TAB_ISSUES } from \"../app/globals\";\n\nclass Search extends React.Component {\n  render() {\n    return (\n      <Component\n        initialState={{\n          selectedIndex: 0,\n          tabs: [TAB_ALL, TAB_REPO, TAB_ORG, TAB_USER, TAB_ISSUES]\n        }}\n      >\n        {({ state, setState }) => (\n          <Pane height={120}>\n            <Tablist marginBottom={10} flexBasis={240} marginRight={10}>\n              {state.tabs.map((tab, index) => (\n                <Tab\n                  key={tab}\n                  id={tab}\n                  onClick={() => setState({ rootToken: \"edwindotcom\" })}\n                  onSelect={() => setState({ selectedIndex: index })}\n                  isSelected={index === state.selectedIndex}\n                  aria-controls={`panel-${tab}`}\n                >\n                  {tab}\n                </Tab>\n              ))}\n            </Tablist>\n            <Pane\n              // padding={}\n              flex={1}\n              alignItems=\"left\"\n              display=\"flex\"\n            >\n              {state.tabs.map((tab, index) => (\n                <Pane\n                  key={tab}\n                  id={`panel-${tab}`}\n                  role=\"tabpanel\"\n                  aria-labelledby={tab}\n                  aria-hidden={index !== state.selectedIndex}\n                  display={index === state.selectedIndex ? \"block\" : \"none\"}\n                >\n                  <ContentManager tab={tab}></ContentManager>\n                </Pane>\n              ))}\n            </Pane>\n          </Pane>\n        )}\n      </Component>\n    );\n  }\n}\n\nexport default Search;\n","/*global chrome*/\n\nimport React from \"react\";\nimport { Pane, Heading, Link } from \"evergreen-ui\";\nimport Search from \"../common/Search.jsx\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Pane>\n          <Heading size={900}>Hubba</Heading>\n          <Search></Search>\n          <Link\n            marginRight={16}\n            href=\"https://github.com/edwindotcom/hubba\"\n            float=\"right\"\n          >source/help\n          </Link>\n        </Pane>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}